# .gitignore 中加入的資料，可以避免這個檔案被 comit (提交)到專案中(上傳到網路上得gitHUB)
#
#
#虛擬環境.venv
#       Python 應用程式通常會用到不在標準函式庫的套件和模組。應用程式有時候會需要某個特定版本的函式庫，
#       因為這個應用程式可能需要某個特殊的臭蟲修正，或是這個應用程式是根據該函式庫特定版本的介面所撰寫。
#       這意味著不太可能安裝一套 Python 就可以滿足所有應用程式的要求。如果應用程式 A 需要一個特定的模組的 1.0 版，
#       但另外一個應用程式 B 需要 2.0 版，那麼這整個需求不管安裝 1.0 或是 2.0 都會衝突，以致於應用程式無法使用。
#       解決方案是創建一個虛擬環境 (virtual environment)，這是一個獨立的資料夾，並且裡面裝好了特定版本的 Python，以及一系列相關的套件。
#       不同的應用程式可以使用不同的虛擬環境。以前述中需要被解決的例子中，應用程式 A 能夠擁有它自己的虛擬環境，
#       並且是裝好 1.0 版，然而應用程式 B 則可以是用另外一個有 2.0 版的虛擬環境。
#       要是應用程式 B 需要某個函式庫被升級到 3.0 版，這並不會影響到應用程式 A 的環境。
#       https://docs.python.org/zh-tw/3/tutorial/venv.html

#.env 敏感的帳密、主機位址或連線金鑰集中放在這個檔案中
#       在撰寫程式時，有些比較敏感的資訊是不適合直接放在程式碼中的。
#       為了解決這個問題，很多的語言和框架都採用了 .env 設定檔的解決方案，將敏感的帳密、主機位址或連線金鑰集中放在這個檔案中
#       並在 .gitignore 中加入 .env 這筆資料，避免這個檔案被 comit 到專案中 ，
#       然後我們會再加入 .env.example 這個檔案以供使用者參考填入設定值。
#       https://kirin.idv.tw/python-dotenv-sensitive-secret-data-storage/
#
#__pycache__
#       這在創建虛擬主機.venv後自動生成的快取資料夾


.venv
__pycache__
.env